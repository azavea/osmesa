{"paragraphs":[{"text":"import geotrellis.proj4._\nimport geotrellis.spark._\nimport geotrellis.spark.io._\nimport geotrellis.spark.io.file._\nimport geotrellis.spark.io.index.ZCurveKeyIndexMethod\nimport geotrellis.spark.io.s3.{S3AttributeStore, S3LayerWriter}\nimport geotrellis.spark.tiling._\nimport geotrellis.vectortile.VectorTile\nimport org.apache.log4j.{Level, Logger}\nimport org.apache.spark._\nimport org.apache.spark.rdd.RDD\nimport org.apache.spark.sql._\nimport vectorpipe._\nimport vectorpipe.util.LayerMetadata\nimport com.monovore.decline._\n\nimport osmesa._\n","dateUpdated":"2017-10-21T06:15:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport geotrellis.proj4._\n\nimport geotrellis.spark._\n\nimport geotrellis.spark.io._\n\nimport geotrellis.spark.io.file._\n\nimport geotrellis.spark.io.index.ZCurveKeyIndexMethod\n\nimport geotrellis.spark.io.s3.{S3AttributeStore, S3LayerWriter}\n\nimport geotrellis.spark.tiling._\n\nimport geotrellis.vectortile.VectorTile\n\nimport org.apache.log4j.{Level, Logger}\n\nimport org.apache.spark._\n\nimport org.apache.spark.rdd.RDD\n\nimport org.apache.spark.sql._\n\nimport vectorpipe._\n\nimport vectorpipe.util.LayerMetadata\n\nimport com.monovore.decline._\n\nimport osmesa._\n"}]},"apps":[],"jobName":"paragraph_1508555971898_527049516","id":"20170912-192002_1003937889","dateCreated":"2017-10-21T03:19:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2821","user":"anonymous","dateFinished":"2017-10-21T06:16:09+0000","dateStarted":"2017-10-21T06:15:59+0000"},{"text":"      /* Settings compatible for both local and EMR execution */\n      val conf = new SparkConf()\n        .setIfMissing(\"spark.master\", \"local[*]\")\n        .setAppName(\"vp-orc-io\")\n\n      implicit val ss: SparkSession = SparkSession.builder\n        .config(conf)\n        .enableHiveSupport\n        .getOrCreate\n","dateUpdated":"2017-10-21T03:23:51+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nconf: org.apache.spark.SparkConf = org.apache.spark.SparkConf@7eb70ad3\n\nss: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@3efc991f\n"}]},"apps":[],"jobName":"paragraph_1508555971904_510890063","id":"20170912-192013_1465160975","dateCreated":"2017-10-21T03:19:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2822","user":"anonymous","dateFinished":"2017-10-21T03:23:53+0000","dateStarted":"2017-10-21T03:23:51+0000"},{"text":"val changesets = ss.read.orc(\"s3://osm-pds/changesets/changesets-latest.orc\")","dateUpdated":"2017-10-21T03:25:20+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nchangesets: org.apache.spark.sql.DataFrame = [id: bigint, tags: map<string,string> ... 11 more fields]\n"}]},"apps":[],"jobName":"paragraph_1508555971905_510505314","id":"20170912-195450_1591677940","dateCreated":"2017-10-21T03:19:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2823","user":"anonymous","dateFinished":"2017-10-21T03:25:24+0000","dateStarted":"2017-10-21T03:25:20+0000"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508556361803_1125517946","id":"20171021-032601_661563935","dateCreated":"2017-10-21T03:26:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4156","text":"val history = ss.read.orc(\"s3://osm-pds/planet-history/history-latest.orc\")","dateUpdated":"2017-10-21T03:26:46+0000","dateFinished":"2017-10-21T03:26:47+0000","dateStarted":"2017-10-21T03:26:46+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nhistory: org.apache.spark.sql.DataFrame = [id: bigint, type: string ... 11 more fields]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508556410752_1519729038","id":"20171021-032650_1787161366","dateCreated":"2017-10-21T03:26:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4263","text":"// Count historical nodes\nhistory.where(\"type = 'node'\").count()","dateUpdated":"2017-10-21T03:27:17+0000","dateFinished":"2017-10-21T03:29:31+0000","dateStarted":"2017-10-21T03:27:17+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres5: Long = 6276580974\n"}]}},{"user":"anonymous","config":{"colWidth":11,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508556664631_-789733075","id":"20171021-033104_1461507343","dateCreated":"2017-10-21T03:31:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4338","text":"val historyNodes = history.select(\"lat\", \"lon\", \"changeset\").where(\"type = 'node'\")","dateUpdated":"2017-10-21T03:49:10+0000","dateFinished":"2017-10-21T03:33:54+0000","dateStarted":"2017-10-21T03:33:53+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nhistoryNodes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [lat: decimal(9,7), lon: decimal(10,7) ... 1 more field]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508558192260_-2029128292","id":"20171021-035632_417127929","dateCreated":"2017-10-21T03:56:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4702","text":"val HashtagSet = raw\"#([\\w-_]+)\".r\nval breakOutHashtags = udf[Seq[String], Map[String, String]] { tags =>\n    var hashtags = List[String]()\n    tags.get(\"comment\") match {\n        case Some(s) =>\n            for (m <- HashtagSet.findAllMatchIn(s)) { hashtags = hashtags :+ m.group(0).toLowerCase }\n        case None =>\n    }\n\n    hashtags\n    // Seq(\"yes?\")\n}\n//val breakOutHashtagsUDF = udf(breakOutHashTags _)","dateUpdated":"2017-10-21T06:02:08+0000","dateFinished":"2017-10-21T06:02:10+0000","dateStarted":"2017-10-21T06:02:08+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nHashtagSet: scala.util.matching.Regex = #([\\w-_]+)\n\nbreakOutHashtags: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,ArrayType(StringType,true),Some(List(MapType(StringType,StringType,true))))\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508559014534_574077833","id":"20171021-041014_391746485","dateCreated":"2017-10-21T04:10:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5131","text":"val changesetsWithHashtags = changesets.withColumn(\"hashtags\", breakOutHashtagsUDF($\"tags\"))","dateUpdated":"2017-10-21T04:36:41+0000","dateFinished":"2017-10-21T04:36:41+0000","dateStarted":"2017-10-21T04:36:41+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nchangesetsWithHashtags: org.apache.spark.sql.DataFrame = [id: bigint, tags: map<string,string> ... 12 more fields]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508556836933_-183339804","id":"20171021-033356_1515714064","dateCreated":"2017-10-21T03:33:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4419","text":"//changesetsWithHashtags.where(size($\"hashtags\") > 0).sample(false, 0.1).limit(1).collect()\n// .where (array_contains (df(\"tags\"), \"private\"))\nchangesets.where($\"tags\".getItem(\"comment\").contains(\"#\")).withColumn(\"hashtags\", breakOutHashtags($\"tags\")).select($\"id\", explode($\"hashtags\"))","dateUpdated":"2017-10-21T05:23:11+0000","dateFinished":"2017-10-21T05:21:28+0000","dateStarted":"2017-10-21T05:20:57+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres88: Array[org.apache.spark.sql.Row] = Array([49457719,#hotosm-project-1], [49457719,#MissingMaps], [49457719,#EliminateMalaria], [49457719,#Zimbabwe])\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508563411328_1435783956","id":"20171021-052331_849765141","dateCreated":"2017-10-21T05:23:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6646","text":"    val changesetToHashtag =\n      changesets\n        .where($\"tags\".getItem(\"comment\").contains(\"#\"))\n        .withColumn(\"hashtags\", breakOutHashtags($\"tags\"))\n        .where(size($\"hashtags\") > 0)\n        .select($\"id\", explode($\"hashtags\").alias(\"hashtag\"))\n\n","dateUpdated":"2017-10-21T05:48:04+0000","dateFinished":"2017-10-21T05:48:05+0000","dateStarted":"2017-10-21T05:48:04+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nchangesetToHashtag: org.apache.spark.sql.DataFrame = [id: bigint, hashtag: string]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508563658750_743573067","id":"20171021-052738_1530669210","dateCreated":"2017-10-21T05:27:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6801","text":"    historyNodes.join(changesetToHashtag, historyNodes.col(\"changeset\") === changesetToHashtag.col(\"id\")).sample(false, 0.1).limit(1).collect()","dateUpdated":"2017-10-21T05:28:51+0000","dateFinished":"2017-10-21T05:43:32+0000","dateStarted":"2017-10-21T05:28:51+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres90: Array[org.apache.spark.sql.Row] = Array([51.2950689,-1.0488869,1281206,1281206,#8])\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508560106912_1995454641","id":"20171021-042826_2100718155","dateCreated":"2017-10-21T04:28:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5389","text":"changesetToHashtag.groupBy(\"hashtag\").agg(count(\"*\")).collect()","dateUpdated":"2017-10-21T05:48:09+0000","dateFinished":"2017-10-21T05:49:17+0000","dateStarted":"2017-10-21T05:48:09+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res94: Array[org.apache.spark.sql.Row] = Array([#R079,285], [#YouthMappers,57779], [#entry34834767,4], [#hotosm-project-3178,1806], [#msftgive,10457], [#keddy23,4], [#ICMSYouthmappers,2], [#ecolint,199], [#1015293,1], [#acnphil,102], [#1059581,1], [#27,87], [#Argentan,1], [#Brisas,1], [#hotosm-project-2860,2048], [#ACNFR_PRO,32], [#hotosm-project-3360,141], [#RamaniHuria_Tagging,1], [#at,1], [#dcm,2221], [#ArupDublin,118], [#mapathan,1], [#sierraleoneflooding,1324], [#hotosm-project-26,47], [#tree,1], [#2257,1], [#hotosm-project-3476,39], [#GPS,31], [#Cisco-ops,12], [#cisco_Ops-jozef,1], [#19september5,7], [#Bld,2], [#4-7,1], [#1587,1], [#slight,6], [#msftidentity,78], [#msftgrowth,60], [#Afit,6], [#adlyani,4], [#17-21,1], [#29382255,1], [#35100844,1], [#29459431,1], [#34583706,1], [#33..."}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508565091117_928085618","id":"20171021-055131_561539052","dateCreated":"2017-10-21T05:51:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7031","text":"val a = res94","dateUpdated":"2017-10-21T05:51:40+0000","dateFinished":"2017-10-21T05:51:41+0000","dateStarted":"2017-10-21T05:51:40+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"a: Array[org.apache.spark.sql.Row] = Array([#R079,285], [#YouthMappers,57779], [#entry34834767,4], [#hotosm-project-3178,1806], [#msftgive,10457], [#keddy23,4], [#ICMSYouthmappers,2], [#ecolint,199], [#1015293,1], [#acnphil,102], [#1059581,1], [#27,87], [#Argentan,1], [#Brisas,1], [#hotosm-project-2860,2048], [#ACNFR_PRO,32], [#hotosm-project-3360,141], [#RamaniHuria_Tagging,1], [#at,1], [#dcm,2221], [#ArupDublin,118], [#mapathan,1], [#sierraleoneflooding,1324], [#hotosm-project-26,47], [#tree,1], [#2257,1], [#hotosm-project-3476,39], [#GPS,31], [#Cisco-ops,12], [#cisco_Ops-jozef,1], [#19september5,7], [#Bld,2], [#4-7,1], [#1587,1], [#slight,6], [#msftidentity,78], [#msftgrowth,60], [#Afit,6], [#adlyani,4], [#17-21,1], [#29382255,1], [#35100844,1], [#29459431,1], [#34583706,1], [#338485..."}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508565104818_299790664","id":"20171021-055144_1966496306","dateCreated":"2017-10-21T05:51:44+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7112","text":"val m = a.map { row =>\n  (row.getAs[String](\"hashtag\"), row.getAs[Long](1))\n}.filter(_._2 > 100000).sortBy(_._2).foreach { case (k, v) => println(s\"$k,$v\") }\n","dateUpdated":"2017-10-21T06:15:30+0000","dateFinished":"2017-10-21T06:15:31+0000","dateStarted":"2017-10-21T06:15:30+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\n\n\n\n\n\n\njava.lang.NoClassDefFoundError: cats/implicits$\n  ... 108 elided\nCaused by: java.lang.ClassNotFoundException: cats.implicits$\n  at scala.reflect.internal.util.AbstractFileClassLoader.findClass(AbstractFileClassLoader.scala:62)\n  at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n  at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n  ... 108 more\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508556943349_-1584566000","id":"20171021-033543_895438484","dateCreated":"2017-10-21T03:35:43+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4475","text":"val hashtags = raw\"#(\\w+)\".r\ndef breakOutHashTags(s: String): Array[String] = {\n    \n}\nval checkerUdf = udf { (s: String) => dict.exists(s.contains(_)) }","dateUpdated":"2017-10-21T04:07:20+0000","dateFinished":"2017-10-21T03:35:57+0000","dateStarted":"2017-10-21T03:35:57+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\n\n\n<console>:140: error: not found: value dict\n       val checkerUdf = udf { (s: String) => dict.exists(s.contains(_)) }\n                                             ^\n"}]}},{"text":"df\n    .select(\"lat\", \"lon\", \"id\", \"user\", \"uid\", \"changeset\", \"version\", \"timestamp\", \"tags\")\n    .where(\"user = 'lossyrob'\")\n    .count()\n","dateUpdated":"2017-10-21T03:19:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres19: Long = 610\n"}]},"apps":[],"jobName":"paragraph_1508555971906_511659560","id":"20170912-195924_708474401","dateCreated":"2017-10-21T03:19:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2824"},{"text":"// FOR THE WHOLE PLANET\nval df = ss.read.orc(\"s3://osm-pds/planet/planet-latest.orc\")\ndf\n    .select(\"id\")\n    .where(\"type != 'node'\")\n    .count()\n    ","dateUpdated":"2017-10-21T03:19:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndf: org.apache.spark.sql.DataFrame = [id: bigint, type: string ... 10 more fields]\n\nres17: Long = 440490961\n"}]},"apps":[],"jobName":"paragraph_1508555971908_509351067","id":"20170914-023935_1728759823","dateCreated":"2017-10-21T03:19:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2827"},{"text":"val total = 4502050947L\nval nodes = 4061559986L\nval nonNodes = total - nodes\n(nodes * (8+8)) + (nonNodes * (8 + 16)) // Number of bytes to store the keys of tiles that could intersect geometries","dateUpdated":"2017-10-21T03:19:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ntotal: Long = 4502050947\n\nnodes: Long = 4061559986\n\nnonNodes: Long = 440490961\n\nres21: Long = 75556742840\n"}]},"apps":[],"jobName":"paragraph_1508555971909_508966318","id":"20170914-024600_1268527826","dateCreated":"2017-10-21T03:19:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2828"},{"text":"(nodes * (8+1+8)) + (nonNodes * (8 + 1+16))","dateUpdated":"2017-10-21T03:19:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres20: Long = 80058793787\n"}]},"apps":[],"jobName":"paragraph_1508555971910_510120565","id":"20170914-025333_182749173","dateCreated":"2017-10-21T03:19:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2829"},{"text":"// FOR FINLAND\nval df = ss.read.orc(\"s3://vectortiles/orc/europe/finland.orc\")\ndf\n  .select(\"id\")\n  .where(\"type = 'node'\")\n  .count()","dateUpdated":"2017-10-21T03:19:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndf: org.apache.spark.sql.DataFrame = [id: bigint, type: string ... 10 more fields]\n\nres9: Long = 33792531\n"}]},"apps":[],"jobName":"paragraph_1508555971911_509735816","id":"20170914-050605_500171014","dateCreated":"2017-10-21T03:19:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2830"},{"text":"// FOR THE WHOLE PLANET\nval df = ss.read.orc(\"s3://osm-pds/planet/planet-latest.orc\")\n\n//df\n//    .select(\"id\")\n//    .where(\"type != 'node' OR (lon <= -34.767608642578125 AND lon >= -81.33865356445312 AND lat <= 12.623252653219012 AND lat >= -55.98609153380838 AND timestamp <= '2017-06-01 00:00:00.0')\")\n//    .count()","dateUpdated":"2017-10-21T03:19:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ndf: org.apache.spark.sql.DataFrame = [id: bigint, type: string ... 10 more fields]\n"}]},"apps":[],"jobName":"paragraph_1508555971912_507812071","id":"20170914-025645_685582604","dateCreated":"2017-10-21T03:19:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2831"},{"text":"143649996 - 132877507//33792531","dateUpdated":"2017-10-21T03:19:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres15: Int = 10772489\n"}]},"apps":[],"jobName":"paragraph_1508555971912_507812071","id":"20170914-051234_1690547725","dateCreated":"2017-10-21T03:19:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2832"},{"text":"val southAmerica  = \n  df\n    .where(\"type != 'node' OR (lon <= -34.767608642578125 AND lon >= -81.33865356445312 AND lat <= 12.623252653219012 AND lat >= -55.98609153380838 AND timestamp <= '2017-06-01 00:00:00.0')\")","dateUpdated":"2017-10-21T03:19:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nsouthAmerica: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [id: bigint, type: string ... 10 more fields]\n"}]},"apps":[],"jobName":"paragraph_1508555971913_507427323","id":"20170914-052259_138168579","dateCreated":"2017-10-21T03:19:31+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:2833"},{"dateUpdated":"2017-10-21T04:06:52+0000","config":{"colWidth":11,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508555971916_506273076","id":"20170916-022912_582999227","dateCreated":"2017-10-21T03:19:31+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2836","text":"val s = \"This is #something;#somethingelse and #yes\"\nval hashtags = raw\"#(\\w+)\".r\nfor (m <- hashtags.findAllMatchIn(s)) {println(m.group(0))}\n//#allYears.toArray","user":"anonymous","dateFinished":"2017-10-21T04:06:54+0000","dateStarted":"2017-10-21T04:06:52+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ns: String = This is #something;#somethingelse and #yes\n\nhashtags: scala.util.matching.Regex = #(\\w+)\n#something\n#somethingelse\n#yes\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508558510630_-1030493647","id":"20171021-040150_1003448611","dateCreated":"2017-10-21T04:01:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4775","text":"val ds = Seq(\n  (1, Map(\"foo\" -> (1, \"a\"), \"bar\" -> (2, \"b\"))),\n  (2, Map(\"foo\" -> (3, \"c\"))),\n  (3, Map(\"bar\" -> (4, \"d\")))\n).toDF(\"id\", \"alpha\")","dateUpdated":"2017-10-21T04:58:07+0000","dateFinished":"2017-10-21T04:58:09+0000","dateStarted":"2017-10-21T04:58:07+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nds: org.apache.spark.sql.DataFrame = [id: int, alpha: map<string,struct<_1:int,_2:string>>]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508561887546_-1895731579","id":"20171021-045807_567405233","dateCreated":"2017-10-21T04:58:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5899","text":"val keys = udf[Seq[String], Map[String, Row]](_.keys.toSeq)\n\nval keysDF = ds.select(keys($\"alpha\"))","dateUpdated":"2017-10-21T04:58:32+0000","dateFinished":"2017-10-21T04:58:33+0000","dateStarted":"2017-10-21T04:58:32+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nkeys: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,ArrayType(StringType,true),None)\n\nkeysDF: org.apache.spark.sql.DataFrame = [UDF(alpha): array<string>]\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508561902486_1477377352","id":"20171021-045822_52435428","dateCreated":"2017-10-21T04:58:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5980","text":"keysDF.collect","dateUpdated":"2017-10-21T04:59:31+0000","dateFinished":"2017-10-21T04:59:32+0000","dateStarted":"2017-10-21T04:59:31+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres62: Array[org.apache.spark.sql.Row] = Array([WrappedArray(foo, bar)], [WrappedArray(foo)], [WrappedArray(bar)])\n"}]}},{"user":"anonymous","config":{"colWidth":11,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508561932928_-102588811","id":"20171021-045852_1569244883","dateCreated":"2017-10-21T04:58:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6087","text":"changesets.where($\"tags\".getItem(\"comment\").contains(\"#\")).sample(false, 0.1).withColumn(\"hashtags\", keys($\"tags\")).limit(1).collect()","dateUpdated":"2017-10-21T05:03:21+0000","dateFinished":"2017-10-21T05:03:38+0000","dateStarted":"2017-10-21T05:03:21+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres65: Array[org.apache.spark.sql.Row] = Array([894656,Map(comment -> This way contains more than one node at least twice. Nodes are #371755231, #371755239. This may or may not be an error., created_by -> JOSM),2009-04-22 09:03:27.0,false,2009-04-22 09:03:28.0,0,53.6351077,53.6351077,10.0337862,10.0351333,12,7041,UncleOwen,WrappedArray(comment, created_by)])\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508562096031_-2016467757","id":"20171021-050136_1299378767","dateCreated":"2017-10-21T05:01:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6198","text":"\"asdf\".toLowerCase","dateUpdated":"2017-10-21T06:01:31+0000","dateFinished":"2017-10-21T06:01:32+0000","dateStarted":"2017-10-21T06:01:31+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nres127: String = asdf\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508565677132_1219756456","id":"20171021-060117_95537272","dateCreated":"2017-10-21T06:01:17+0000","status":"ERROR","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7809","text":"udf.adsf","dateUpdated":"2017-10-21T06:31:44+0000","dateFinished":"2017-10-21T06:31:45+0000","dateStarted":"2017-10-21T06:31:44+0000","results":{"code":"ERROR","msg":[{"type":"TEXT","data":"\n\n\n\n\n\n<console>:177: error: ambiguous reference to overloaded definition,\nboth method udf in object functions of type (f: AnyRef, dataType: org.apache.spark.sql.types.DataType)org.apache.spark.sql.expressions.UserDefinedFunction\nand  method udf in object functions of type [RT, A1, A2, A3, A4, A5, A6, A7, A8, A9, A10](f: (A1, A2, A3, A4, A5, A6, A7, A8, A9, A10) => RT)(implicit evidence$57: reflect.runtime.universe.TypeTag[RT], implicit evidence$58: reflect.runtime.universe.TypeTag[A1], implicit evidence$59: reflect.runtime.universe.TypeTag[A2], implicit evidence$60: reflect.runtime.universe.TypeTag[A3], implicit evidence$61: reflect.runtime.universe.TypeTag[A4], implicit evidence$62: reflect.runtime.universe.TypeTag[A5], implicit evidence$63: reflect.runtime.universe.TypeTag[A6], implicit evidence$64: reflect.runtime.universe.TypeTag[A7], implicit evidence$65: reflect.runtime.universe.TypeTag[A8], implicit evidence$66: reflect.runtime.universe.TypeTag[A9], implicit evidence$67: reflect.runtime.universe.TypeTag[A10])org.apache.spark.sql.expressions.UserDefinedFunction\nmatch expected type ?\n       udf.adsf\n       ^\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1508567504756_-1667594692","id":"20171021-063144_1756731700","dateCreated":"2017-10-21T06:31:44+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8037"}],"name":"Working with ORC","id":"2CYHW3WS2","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}